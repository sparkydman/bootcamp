// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependencies

import (
	"bootcamp-api/app/controller"
	"bootcamp-api/app/repository"
	"bootcamp-api/app/service"
	"bootcamp-api/config"
	"github.com/google/wire"
)

// Injectors from injectors.go:

func InitApp(uri string) (*Initialize, error) {
	configDb, err := config.NewConnection(uri)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(configDb)
	userService := service.NewUserService(userRepository)
	userController := controller.NewUserController(userService)
	initialize := NewInitialize(configDb, userRepository, userService, userController)
	return initialize, nil
}

// injectors.go:

var db = wire.NewSet(config.NewConnection)

var userRepo = wire.NewSet(repository.NewUserRepository, wire.Bind(new(repository.IUserRepository), new(*repository.UserRepository)))

var userSvc = wire.NewSet(service.NewUserService, wire.Bind(new(service.IUserService), new(*service.UserService)))

var userCtrl = wire.NewSet(controller.NewUserController, wire.Bind(new(controller.IUserController), new(*controller.UserController)))
